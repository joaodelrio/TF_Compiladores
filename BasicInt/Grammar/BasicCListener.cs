//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:/Compilador TRABALHO FINAL/BasicC.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="BasicCParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IBasicCListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] BasicCParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] BasicCParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] BasicCParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] BasicCParser.LineContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelExistente</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariavelExistente([NotNull] BasicCParser.VariavelExistenteContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelExistente</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariavelExistente([NotNull] BasicCParser.VariavelExistenteContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelNova</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariavelNova([NotNull] BasicCParser.VariavelNovaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelNova</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariavelNova([NotNull] BasicCParser.VariavelNovaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelNovaString</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariavelNovaString([NotNull] BasicCParser.VariavelNovaStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelNovaString</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariavelNovaString([NotNull] BasicCParser.VariavelNovaStringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelExistenteString</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariavelExistenteString([NotNull] BasicCParser.VariavelExistenteStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelExistenteString</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariavelExistenteString([NotNull] BasicCParser.VariavelExistenteStringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput([NotNull] BasicCParser.InputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput([NotNull] BasicCParser.InputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutput([NotNull] BasicCParser.OutputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutput([NotNull] BasicCParser.OutputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] BasicCParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] BasicCParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] BasicCParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] BasicCParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] BasicCParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] BasicCParser.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.controlflow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterControlflow([NotNull] BasicCParser.ControlflowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.controlflow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitControlflow([NotNull] BasicCParser.ControlflowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop([NotNull] BasicCParser.LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop([NotNull] BasicCParser.LoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] BasicCParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] BasicCParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fnBlockLine</c>
	/// labeled alternative in <see cref="BasicCParser.rblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFnBlockLine([NotNull] BasicCParser.FnBlockLineContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fnBlockLine</c>
	/// labeled alternative in <see cref="BasicCParser.rblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFnBlockLine([NotNull] BasicCParser.FnBlockLineContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fnBodyLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFnBodyLine([NotNull] BasicCParser.FnBodyLineContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fnBodyLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFnBodyLine([NotNull] BasicCParser.FnBodyLineContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fnBodyLineMore</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFnBodyLineMore([NotNull] BasicCParser.FnBodyLineMoreContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fnBodyLineMore</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFnBodyLineMore([NotNull] BasicCParser.FnBodyLineMoreContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fnReturnExprLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFnReturnExprLine([NotNull] BasicCParser.FnReturnExprLineContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fnReturnExprLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFnReturnExprLine([NotNull] BasicCParser.FnReturnExprLineContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fnReturnLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFnReturnLine([NotNull] BasicCParser.FnReturnLineContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fnReturnLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFnReturnLine([NotNull] BasicCParser.FnReturnLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.bexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBexpr([NotNull] BasicCParser.BexprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.bexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBexpr([NotNull] BasicCParser.BexprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] BasicCParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] BasicCParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParams([NotNull] BasicCParser.ParamsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParams([NotNull] BasicCParser.ParamsContext context);
}
